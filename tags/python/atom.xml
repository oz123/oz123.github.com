<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
<title>Oz's Blog</title>
<subtitle>Oz's weblog</subtitle>
<link href="http://oz123.github.com/atom.xml" rel="self" />
<link href="http://oz123.github.com/" />
<id>http://oz123.github.com/atom.xml</id>
<updated>2016-09-07T20:56:00Z</updated>
<author>
  <name>Oz Nahum Tiram</name>
  <email>nahumoz@gmail.com</email>
</author>
<entry>
  <title>On learning Ruby coming from Python ...</title>
  <link href="http://oz123.github.com/writings/2016-08-23-On-learning-Ruby-and-Python/index.html" />
  <id>http://oz123.github.com/writings/2016-08-23-On-learning-Ruby-and-Python/index.html</id>
  <content type="xhtml">
    <div xmlns="http://www.w3.org/1999/xhtml">
    I am learning Ruby, and coming from Python it's not a an easy thing.
    Ruby is confusing, it has a weird syntax, and things are not really
    simple as in Python. There is still tons of stuff which seem like dark magic.
    There's `nil`, there are `gems` and `bundler`. And there is _Rails, 
    which isn't Ruby_. Ruby is good for so many people out there, and I am sure 
    you can do amazing things in it. I already know it's never going to be my 
    weapon of choice, but it's not bad knowing my way around it. I'd like to know 
    how to set up a simple project, read and debug code, install gems and package 
    ruby projects. I have been ignoring Ruby for too long.
    <a href="http://oz123.github.com/writings/2016-08-23-On-learning-Ruby-and-Python/index.html">continue reading...</a>
    </div>
  </content>
  </entry>
<entry>
  <title>Morse fun with Python</title>
  <link href="http://oz123.github.com/writings/morse-fun-with-python/index.html" />
  <id>http://oz123.github.com/writings/morse-fun-with-python/index.html</id>
  <content type="xhtml">
    <div xmlns="http://www.w3.org/1999/xhtml">
    Creating morse code or translating it to ASCII text is fun, even more fun is making your laptop beep morse code. Here how you can do it with Python.
    <a href="http://oz123.github.com/writings/morse-fun-with-python/index.html">continue reading...</a>
    </div>
  </content>
  </entry>
<entry>
  <title>Yet another case of Python vs. Regular Expressions</title>
  <link href="http://oz123.github.com/writings/yet-another-case-of-python-vs-regex/index.html" />
  <id>http://oz123.github.com/writings/yet-another-case-of-python-vs-regex/index.html</id>
  <content type="xhtml">
    <div xmlns="http://www.w3.org/1999/xhtml">
    Regular Expressions are really awesome, and If you read the last post you might got the wrong impression I am totally against their use. I love using regular expressions, but sometimes, knowing Python is more than enough.
    <a href="http://oz123.github.com/writings/yet-another-case-of-python-vs-regex/index.html">continue reading...</a>
    </div>
  </content>
  </entry>
<entry>
  <title>Python's regex is not always the best option</title>
  <link href="http://oz123.github.com/writings/2016-03-14-Regex/index.html" />
  <id>http://oz123.github.com/writings/2016-03-14-Regex/index.html</id>
  <content type="xhtml">
    <div xmlns="http://www.w3.org/1999/xhtml">
    When programming in Python, regex are not always your best tool. This has a few reasons, regex can be computationally expensive, unreadable and unmaintainble, and finally, sometimes there is a better pythonic way without them. Here are a few examples.
    <a href="http://oz123.github.com/writings/2016-03-14-Regex/index.html">continue reading...</a>
    </div>
  </content>
  </entry>
<entry>
  <title>AJAX with bottle.py</title>
  <link href="http://oz123.github.com/writings/2015-08-17-AJAX-with-bottle.py/index.html" />
  <id>http://oz123.github.com/writings/2015-08-17-AJAX-with-bottle.py/index.html</id>
  <content type="xhtml">
    <div xmlns="http://www.w3.org/1999/xhtml">
    A working example of AJAX with JQuery and Bottle
    <a href="http://oz123.github.com/writings/2015-08-17-AJAX-with-bottle.py/index.html">continue reading...</a>
    </div>
  </content>
  </entry>
<entry>
  <title>Introducing psutil in Munich Python Users</title>
  <link href="http://oz123.github.com/writings/2015-07-16-Introducing-psutil-in-Munich-Python-Users/index.html" />
  <id>http://oz123.github.com/writings/2015-07-16-Introducing-psutil-in-Munich-Python-Users/index.html</id>
  <content type="xhtml">
    <div xmlns="http://www.w3.org/1999/xhtml">
    I gave a quick talk in Python Munich User Group about one of my favourite. Here is a link to the presentation about psutil.
    <a href="http://oz123.github.com/writings/2015-07-16-Introducing-psutil-in-Munich-Python-Users/index.html">continue reading...</a>
    </div>
  </content>
  </entry>
<entry>
  <title>New version of Pwman3 released</title>
  <link href="http://oz123.github.com/writings/2015-03-22-New-version-of-Pwman3-released/index.html" />
  <id>http://oz123.github.com/writings/2015-03-22-New-version-of-Pwman3-released/index.html</id>
  <content type="xhtml">
    <div xmlns="http://www.w3.org/1999/xhtml">
    I finally managed to release a new version of pwman3, the console and network password manager. Read more about it here.
    <a href="http://oz123.github.com/writings/2015-03-22-New-version-of-Pwman3-released/index.html">continue reading...</a>
    </div>
  </content>
  </entry>
<entry>
  <title>Simple Multiprocessing Task Queue in Python</title>
  <link href="http://oz123.github.com/writings/2015-02-25-Simple-Multiprocessing-Task-Queue-in-Python/index.html" />
  <id>http://oz123.github.com/writings/2015-02-25-Simple-Multiprocessing-Task-Queue-in-Python/index.html</id>
  <content type="xhtml">
    <div xmlns="http://www.w3.org/1999/xhtml">
    Yet another tutorial about Python's multiprocessing. What make this one different? Well, it's based on a real life example and shows what is going on behind the sceanes on your Linux host.
    <a href="http://oz123.github.com/writings/2015-02-25-Simple-Multiprocessing-Task-Queue-in-Python/index.html">continue reading...</a>
    </div>
  </content>
  </entry>
<entry>
  <title>Farewell PyCharm! Going VIM again</title>
  <link href="http://oz123.github.com/writings/2015-01-20-Farewell-PyCharm!-Going-VIM-again/index.html" />
  <id>http://oz123.github.com/writings/2015-01-20-Farewell-PyCharm!-Going-VIM-again/index.html</id>
  <content type="xhtml">
    <div xmlns="http://www.w3.org/1999/xhtml">
    A few months ago we migrated from PyDev to PyCharm. After a 3 months time where I lead the migration from PyDev to PyCharm and SVN to GIT, I am back again to work with VIM. Here are my thoughts about PyCharm.
    <a href="http://oz123.github.com/writings/2015-01-20-Farewell-PyCharm!-Going-VIM-again/index.html">continue reading...</a>
    </div>
  </content>
  </entry>
<entry>
  <title>Poor man's Read-The-Docs</title>
  <link href="http://oz123.github.com/writings/2015-01-16-Poor-man's-Read-The-Docs/index.html" />
  <id>http://oz123.github.com/writings/2015-01-16-Poor-man's-Read-The-Docs/index.html</id>
  <content type="xhtml">
    <div xmlns="http://www.w3.org/1999/xhtml">
    Here is how to build sphinx documentation on multiple branches in your Python project. If you want to have Sphinx documentation for your project without having to install the whole complicated readthedocs.org image.
    <a href="http://oz123.github.com/writings/2015-01-16-Poor-man's-Read-The-Docs/index.html">continue reading...</a>
    </div>
  </content>
  </entry>
</feed>