<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
<title>Oz's Blog</title>
<subtitle>Oz's weblog</subtitle>
<link href="http://oz123.github.com/atom.xml" rel="self" />
<link href="http://oz123.github.com/" />
<id>http://oz123.github.com/atom.xml</id>
<updated>2018-10-07T11:36:36Z</updated>
<author>
  <name>Oz Nahum Tiram</name>
  <email>nahumoz@gmail.com</email>
</author>
<entry>
  <title>backup and restore with duplicity</title>
  <link href="http://oz123.github.com/writings/2018-10-07-backup-and-restore-with-duplicity/index.html" />
  <id>http://oz123.github.com/writings/2018-10-07-backup-and-restore-with-duplicity/index.html</id>
  <content type="xhtml">
    <div xmlns="http://www.w3.org/1999/xhtml">
    Duplicity backup utility is the old workhorse in all recent Ubuntu versions.
  I use the GUI called Deja-Dup for quite a while now. But until now I never bothered
  to check how to restore my files. I did decide to check how to restore file,
  because backup is only half the job! It turns out, that the GUI does a disservice
  for duplicity users. Restoring an encrypted backup turned out to not work.
  I didn't bother to research why, and turned to the CLI. This is a reminder on
  how to restore the files.
    <a href="http://oz123.github.com/writings/2018-10-07-backup-and-restore-with-duplicity/index.html">continue reading...</a>
    </div>
  </content>
  </entry>
<entry>
  <title>blogit - new release</title>
  <link href="http://oz123.github.com/writings/2018-09-21-blogit---new-release/index.html" />
  <id>http://oz123.github.com/writings/2018-09-21-blogit---new-release/index.html</id>
  <content type="xhtml">
    <div xmlns="http://www.w3.org/1999/xhtml">
    After a long development hiatus I am releasing a new version of blogit
    <a href="http://oz123.github.com/writings/2018-09-21-blogit---new-release/index.html">continue reading...</a>
    </div>
  </content>
  </entry>
<entry>
  <title>Submitting patches to Python</title>
  <link href="http://oz123.github.com/writings/2017-07-11-Submitting-patches-to-Python/index.html" />
  <id>http://oz123.github.com/writings/2017-07-11-Submitting-patches-to-Python/index.html</id>
  <content type="xhtml">
    <div xmlns="http://www.w3.org/1999/xhtml">
    This is not my typical blog post style. So no "how to" or opinnions. Just
    some reflections on how I submitted a patch to Python's standard library.
    <a href="http://oz123.github.com/writings/2017-07-11-Submitting-patches-to-Python/index.html">continue reading...</a>
    </div>
  </content>
  </entry>
<entry>
  <title>Why I still persist on not using systemd</title>
  <link href="http://oz123.github.com/writings/2017-04-17-Why-I-still-persist-on-not-using-systemd/index.html" />
  <id>http://oz123.github.com/writings/2017-04-17-Why-I-still-persist-on-not-using-systemd/index.html</id>
  <content type="xhtml">
    <div xmlns="http://www.w3.org/1999/xhtml">
    The following screenshot of a systemd issue reported on github saysit all.  I don't care if systemd is technically superior, the way it's being
 developed is truely bothering. It's leadership is insisting on being blunt  ingoring users, misleading and even wrong.
    <a href="http://oz123.github.com/writings/2017-04-17-Why-I-still-persist-on-not-using-systemd/index.html">continue reading...</a>
    </div>
  </content>
  </entry>
<entry>
  <title>coverage reporting and logging without a webservice</title>
  <link href="http://oz123.github.com/writings/2017-02-28-coverage-reporting-and-logging-without-a-webservice/index.html" />
  <id>http://oz123.github.com/writings/2017-02-28-coverage-reporting-and-logging-without-a-webservice/index.html</id>
  <content type="xhtml">
    <div xmlns="http://www.w3.org/1999/xhtml">
    
    <a href="http://oz123.github.com/writings/2017-02-28-coverage-reporting-and-logging-without-a-webservice/index.html">continue reading...</a>
    </div>
  </content>
  </entry>
<entry>
  <title>Dockerfile quicky - templating with M4</title>
  <link href="http://oz123.github.com/writings/2016-09-07-Docker-quicky---templating-with-M4/index.html" />
  <id>http://oz123.github.com/writings/2016-09-07-Docker-quicky---templating-with-M4/index.html</id>
  <content type="xhtml">
    <div xmlns="http://www.w3.org/1999/xhtml">
    Creating abstracted Dockerfile is something I really wish existed. Every time, 
    I write a `Dockerfile` for a specific base image I must specify the correct
    package manager command. You either use `apt-get` or `apk` or `yum` or any other
    call for the package manager. This is unfortunately, not very reusable. But,
    here is a simple schema how to use M4 macros to achieve this abstraction.
    <a href="http://oz123.github.com/writings/2016-09-07-Docker-quicky---templating-with-M4/index.html">continue reading...</a>
    </div>
  </content>
  </entry>
<entry>
  <title>On learning Ruby coming from Python ...</title>
  <link href="http://oz123.github.com/writings/2016-08-23-On-learning-Ruby-and-Python/index.html" />
  <id>http://oz123.github.com/writings/2016-08-23-On-learning-Ruby-and-Python/index.html</id>
  <content type="xhtml">
    <div xmlns="http://www.w3.org/1999/xhtml">
    I am learning Ruby, and coming from Python it's not a an easy thing.
    Ruby is confusing, it has a weird syntax, and things are not really
    simple as in Python. There is still tons of stuff which seem like dark magic.
    There's `nil`, there are `gems` and `bundler`. And there is _Rails, 
    which isn't Ruby_. Ruby is good for so many people out there, and I am sure 
    you can do amazing things in it. I already know it's never going to be my 
    weapon of choice, but it's not bad knowing my way around it. I'd like to know 
    how to set up a simple project, read and debug code, install gems and package 
    ruby projects. I have been ignoring Ruby for too long.
    <a href="http://oz123.github.com/writings/2016-08-23-On-learning-Ruby-and-Python/index.html">continue reading...</a>
    </div>
  </content>
  </entry>
<entry>
  <title>New version of Pwman3 released (v0.9)</title>
  <link href="http://oz123.github.com/writings/2016-08-10-New-version-of-Pwman3-released-(v0.9)/index.html" />
  <id>http://oz123.github.com/writings/2016-08-10-New-version-of-Pwman3-released-(v0.9)/index.html</id>
  <content type="xhtml">
    <div xmlns="http://www.w3.org/1999/xhtml">
    Yesterday night I released a new version of my CLI password manager Pwman3. This is a major mile stone, with huge amount of changes and improvements. Read more to find about what changed, and what I learned writing this version.
    <a href="http://oz123.github.com/writings/2016-08-10-New-version-of-Pwman3-released-(v0.9)/index.html">continue reading...</a>
    </div>
  </content>
  </entry>
<entry>
  <title>OpenWRT SSH init script with port forwarding</title>
  <link href="http://oz123.github.com/writings/2016-07-03-OpenWRT-init-script-with-port-forwarding/index.html" />
  <id>http://oz123.github.com/writings/2016-07-03-OpenWRT-init-script-with-port-forwarding/index.html</id>
  <content type="xhtml">
    <div xmlns="http://www.w3.org/1999/xhtml">
    If you have a publicly available server you can setup a permanent SSH connection to it from your OpenWRT. Add remote port forwarding to the plan, and you get an easy way to always access your hosts where your OpenWRT router is.
    <a href="http://oz123.github.com/writings/2016-07-03-OpenWRT-init-script-with-port-forwarding/index.html">continue reading...</a>
    </div>
  </content>
  </entry>
<entry>
  <title>Mate Desktop Environment 1.14 for Gentoo</title>
  <link href="http://oz123.github.com/writings/2016-06-09-Mate-Desktop-Environment-1.14-for-Gentoo/index.html" />
  <id>http://oz123.github.com/writings/2016-06-09-Mate-Desktop-Environment-1.14-for-Gentoo/index.html</id>
  <content type="xhtml">
    <div xmlns="http://www.w3.org/1999/xhtml">
    I am announcing here the release of the ebuilds collection of mate-desktop for gentoo. All ebuilds support building with traditional GTK+2 and the newer GTK+3.
    <a href="http://oz123.github.com/writings/2016-06-09-Mate-Desktop-Environment-1.14-for-Gentoo/index.html">continue reading...</a>
    </div>
  </content>
  </entry>
</feed>